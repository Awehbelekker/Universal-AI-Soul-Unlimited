name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          python3-pip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libffi-dev \
          libssl-dev \
          automake \
          ccache
          
    - name: Install Cython and buildozer
      run: |
        pip3 install --upgrade pip
        pip3 install --upgrade cython==0.29.33
        pip3 install --upgrade buildozer
        
    - name: Cache buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
          
    - name: Build APK with buildozer
      run: |
        buildozer -v android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: universal-soul-ai-debug
        path: bin/*.apk
        retention-days: 30
        
    - name: Get APK info
      run: |
        echo "ðŸ“¦ APK Build Complete!"
        echo "Size: $(du -h bin/*.apk | cut -f1)"
        echo "File: $(ls bin/*.apk)"
